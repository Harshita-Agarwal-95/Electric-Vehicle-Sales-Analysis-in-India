# Import Required Libraries
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

# Set plot theme
sns.set_theme(style="whitegrid")

# Load Dataset
df = pd.read_csv('E:/Unified Mentor/Project 2/Electric Vehicle Sale by State/Electric Vehicle Sales by State in India.csv')

# Basic Overview
print("Shape:", df.shape)
print("Unique columns:", df.columns.nunique())
print("Column names:", df.columns)

# Clean column names if needed
df.columns = df.columns.str.strip().str.replace(" ", "_")

# View head and tail
print(df.head())
print(df.tail())

# Value Counts
print("Year-wise distribution:\n", df['Year'].value_counts())
print("State-wise distribution:\n", df['State'].value_counts())
print("Vehicle Class distribution:\n", df['Vehicle_Class'].value_counts())
print("Vehicle Category distribution:\n", df['Vehicle_Category'].value_counts())
print("Vehicle Type distribution:\n", df['Vehicle_Type'].value_counts())

# Descriptive Stats (excluding 'Year')
print(df.drop(columns=['Year']).describe())

# Check for Duplicates and Missing Values
print("Duplicates:", df.duplicated().sum())
print("Missing values:\n", df.isnull().sum())

# Data Type Fixes
print("\nBefore type conversion:")
print(df.info())

# Convert Year to int
df['Year'] = df['Year'].astype(int)

# Convert Date to datetime
df['Date'] = pd.to_datetime(df['Date'], errors='coerce')

# Convert categorical columns
categorical_columns = ['Month_Name', 'State', 'Vehicle_Class', 'Vehicle_Category', 'Vehicle_Type']
df[categorical_columns] = df[categorical_columns].astype('category')

# Final structure
print("\nAfter type conversion:")
print(df.info())

# --- Visualizations ---

# 1. Yearly EV Sales Trend
plt.figure(figsize=(8,5))
sns.lineplot(data=df.groupby('Year')['EV_Sales_Quantity'].sum().reset_index(),
             x='Year', y='EV_Sales_Quantity', marker='o', color='blue')
plt.title('Yearly EV Sales Trend in India')
plt.xlabel('Year')
plt.ylabel('Total EV Sales')
#plt.tight_layout()
plt.show()
plt.savefig('Yearly EV Sales Trend in India')
plt.close()

# 2. Monthly EV Sales Trend (Sort by actual month order)
month_order = ['jan','feb','mar','apr','may','jun','jul','aug','sep','oct','nov','dec']
df['Month_Name'] = df['Month_Name'].str.lower().str.strip()
df['Month_Name'] = pd.Categorical(df['Month_Name'], categories=month_order, ordered=True)

plt.figure(figsize=(8,5))
sns.lineplot(data=df.groupby('Month_Name')['EV_Sales_Quantity'].sum().reset_index(),
             x='Month_Name', y='EV_Sales_Quantity', marker='o', color='red')
plt.title('Monthly EV Sales Trend in India')
plt.xlabel('Month')
plt.ylabel('Total EV Sales')
#plt.tight_layout()
plt.show()
plt.savefig('Monthly EV Sales Trend in India')
plt.close()

# 3. State-wise EV Sales
plt.figure(figsize=(10,10))
state_sales = df.groupby('State')['EV_Sales_Quantity'].sum().sort_values(ascending=False).reset_index()
sns.barplot(data=state_sales, y='State', x='EV_Sales_Quantity', palette='viridis')
plt.title('State-wise EV Sales in India')
plt.xlabel('Total EV Sales')
plt.ylabel('State')
plt.tight_layout()
plt.show()
plt.savefig('State-wise EV Sales in India')
plt.close()

# 4. Vehicle Class Analysis
plt.figure(figsize=(12,5))
vc_sales = df.groupby('Vehicle_Class')['EV_Sales_Quantity'].sum().sort_values(ascending=False).reset_index()
sns.barplot(data=vc_sales, x='Vehicle_Class', y='EV_Sales_Quantity', palette='coolwarm')
plt.title('EV Sales by Vehicle Class')
plt.xticks(rotation=90)
plt.tight_layout()
plt.show()
plt.savefig('EV Sales by Vehicle Class')
plt.close()

# 5. Vehicle Category Analysis
plt.figure(figsize=(6,4))
vcat_sales = df.groupby('Vehicle_Category')['EV_Sales_Quantity'].sum().sort_values(ascending=False).reset_index()
sns.barplot(data=vcat_sales, x='Vehicle_Category', y='EV_Sales_Quantity', palette='pastel')
plt.title('EV Sales by Vehicle Category')
#plt.tight_layout()
plt.show()
plt.savefig('EV Sales by Vehicle Category')
plt.close()

# 6. Vehicle Type Analysis
plt.figure(figsize=(12,5))
vtype_sales = df.groupby('Vehicle_Type')['EV_Sales_Quantity'].sum().sort_values(ascending=False).reset_index()
sns.barplot(data=vtype_sales, x='Vehicle_Type', y='EV_Sales_Quantity', palette='Set2')
plt.title('EV Sales by Vehicle Type')
plt.xticks(rotation=90)
plt.tight_layout()
plt.show()
plt.savefig('EV Sales by Vehicle Type')
plt.close()